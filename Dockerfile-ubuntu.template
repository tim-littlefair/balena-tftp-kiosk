# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
FROM balenalib/%%BALENA_MACHINE_NAME%%-ubuntu-python

# RUN install_packages xserver-xorg-video-fbdev tftpd-hpa tftp-hpa wireshark dbus-x11 lxde openbox rxvt xterm sysvinit-utils
RUN apt update
RUN install_packages -y systemd
RUN install_packages -y rsyslog rsyslog-doc tftpd-hpa tftp-hpa bmon iptraf tmux fbset tcpdump kbd unzip

# Set our working directory
WORKDIR /root

COPY src/rsyslog.conf /etc/rsyslog.conf

ENV TFTPD_DIR=/tftpboot
#ENV TFTPD_USER=_tftpd_user
#RUN useradd $TFTPD_USER
ENV TFTPD_USER=root
RUN sh -c "mkdir $TFTPD_DIR ; ls -l > $TFTPD_DIR/dummy.txt ; chown -R $TFTPD_USER $TFTPD_DIR"
COPY src/*.zip /tftpboot
RUN sh -c "\
    cd $TFTPD_DIR ; \
    for d in *.zip ; \
    do \
        mkdir \$(basename \$d .zip) ; \
        cd \$(basename \$d .zip) ; \
        unzip ../\$d ; \
        pwd ; ls ; cd .. ; \
    done \
"

# Enable udevd so that plugged dynamic hardware devices show up in our container.
#ENV UDEV=1

## TFTP Server Environment

# Allow the server in the container to log on the host's logging interface
# Apart from helping to understand what is going on, this seems to be 
# necessary in order to prevent the server from exiting when the 
# host's /dev unmounts.
# VOLUME /dev/log

# Allow the container access to the frame buffer
# VOLUME /dev

# Allow the container access to the main log file on the host
# VOLUME /var/log

# Expose ports to allow TFTPD to do its job
EXPOSE 69/udp 
EXPOSE 10690-10699/udp

CMD  sh -c "\
    touch /var/log/tftpd.log ; \
    rsyslogd ; \
    openvt -f -c 7 -s -- tail -F /var/log/tftpd.log ; \
    /usr/sbin/in.tftpd -v -v -L -c -s -p -R 10690:10699 $TFTPD_DIR  \
"


