# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
FROM balenalib/%%BALENA_MACHINE_NAME%%-ubuntu-python

RUN apt update
RUN install_packages -y rsyslog rsyslog-doc tftpd-hpa tftp-hpa \
    bmon iptraf tmux fbset tcpdump kbd unzip minicom nvi screen
RUN pip install --upgrade pip pyserial

# Set our working directory
WORKDIR /root

# Set the hostname and add an entry into /etc/hosts that 
# enables the resolver to determine the host's FQDN
# RUN hostname tftp-kiosk
RUN echo $(hostname) > /etc/hostname
RUN echo 127.0.1.1 $(hostname).local >> /etc/hosts

COPY config/rsyslog.conf /etc/rsyslog.conf

ENV TFTPD_DIR=/tftpboot
RUN sh -c "mkdir $TFTPD_DIR"
COPY payloads/*.zip /tftpboot
RUN sh -c "\
    cd $TFTPD_DIR ; \
    for d in *.zip ; \
    do \
        mkdir \$(basename \$d .zip) ; \
        cd \$(basename \$d .zip) ; \
        unzip ../\$d ; \
        lastdir=$(pwd) ; ls ; cd .. ; \
    done \
"
ENV TFTPD_USER=_tftpd_user
RUN useradd $TFTPD_USER
RUN chown -R $TFTPD_USER.$TFTPD_USER $TFTPD_DIR

# Expose ports to allow TFTPD to do its job
EXPOSE 69/udp 
EXPOSE 10690-10699/udp

# Expose hotplug devices including USB/Serial to containers
ENV UDEV=1

# Set up the script which triggers TFTP reflash and the config required
# to support it
COPY scripts/sample.minicom-script .
COPY config/minirc.dfl /etc/minicom

# Copy in the config file for the GNU screen program and the 
# script it invokes
COPY config/kiosk.screenrc ./.screenrc
COPY scripts/view_syslog.sh .
COPY scripts/run_minicom.sh .

CMD  sh -c "\
    echo Before screen ; \
    openvt -f -c 7 -s -w -- screen ; \
    echo After screen ; \
    sleep 60 \
"


